Vagrant is a tool responsible for managing the lifecycle of Virtual Machines

why vagrant?
    -vagrant provides a simple way to create and configure work environments, These environments are provisioned based 
    on a single configuration file, the Vagrantfile,This ensures that the same configuration is used across all team members,
    development, staging, and even production environments, reducing the "works on my machine" syndrome.

vagarant init
    -to set up a new vagrant environement, it creates a new Vagrantfile in the directory where the command is run.
    HashiCorp is the company behind Vagrant, and they provide several standardized boxes for common use cases.

hashicorp/bionic64:
    This part of the command specifies the base image (or "box") that Vagrant will use to create the virtual machine.

k3s is a lightweight distribution of kubernetes that makes it easy to manipulate clusters.
    -kubectl is a kubernetes client to interact with and manage the applications in the cluster.

Server (Controller) Installation: When you run curl -sfL https://get.k3s.io | sh - without additional arguments
    on the first machine, it defaults to installing K3s in server mode. This mode sets up the Kubernetes control plane
    components, making this machine the cluster server (controller).

Agent (Worker) Installation: For the agent or worker nodes, you need to pass specific arguments to the installation
    script to indicate that the machine should join an existing cluster as a worker. This is done using the K3S_URL
    and K3S_TOKEN environment variables

K3d is a tool that makes it very easy to run K3s clusters in Docker. K3d allows you to spin up and manage K3s clusters
    with Docker containers as nodes.

*********************************************************** command line ****************************************************************

Verify the agent node's logs to see if there are any errors related to joining the cluster:
    sudo journalctl -u k3s-agent.service -e

Verify Kubernetes Node Registration: On the server VM (melkarmi), use kubectl to check if the agent node (ozakkare) has registered successfully with the Kubernetes cluster.
    kubectl get nodes

rm -rf ~/.VirtualBox
  rm -rf ~/Library/VirtualBox
  rm -rf ~/Library/Application Support/VirtualBox
rm -rf ~/Library/Saved Application State/org.virtualbox.app.VirtualBox.savedState
sudo rm -rf /Library/Application\ Support/VirtualBox\nsudo rm -rf /Library/Application\ Support/VirtualBox/LaunchDaemons\nsudo rm -rf /Library/LaunchDaemons/org.virtualbox.*\n
  rm -rf .vagrant



























********************************************************************************************************************************************************************************
today: complete the p1 of inception of things and resend my cv if it's possible

tuesday: review the Angular roadmap, method agile and the tecknologies i need to get my head arround + check the exercise of oddo assesement

wednesday and after: work splited into two shifts, morning and afternoon, Angular and inception of things.